# This is a basic workflow to help you get started with Actions

name: CI Python

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint flake8 pytest pydocstyle
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Analysing the code with pylint and flake
        continue-on-error: true
        run: |
          pylint ecgan/ tests/ examples/ --rcfile=.pylintrc
          # exit-zero treats all errors as warnings. Add `--show-source` if desired
          flake8 ecgan/  --ignore=E401 --count --exit-zero --max-complexity=10 --statistics --max-line-length=120
          pydocstyle ecgan --ignore=D203,D212,D413,D407,D406,D107 --ignore-decorators=property

#      Tests are temporarily disabled until we have a more complete set of tests.
#      - name: Execute tests with pytest
#        # Avoid kaggle error by setting the username/key manually. Download is mocked in test.
#        run: |
#          export KAGGLE_USERNAME=ecgan
#          export KAGGLE_KEY=very_secret
#          pytest --ignore tests/legacy
